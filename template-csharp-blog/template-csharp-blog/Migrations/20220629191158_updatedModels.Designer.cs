// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using template_csharp_blog;

#nullable disable

namespace template_csharp_blog.Migrations
{
    [DbContext(typeof(BlogContext))]
    [Migration("20220629191158_updatedModels")]
    partial class updatedModels
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("template_csharp_blog.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 0,
                            Name = "Drumming"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 0,
                            Name = "Video Games"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 0,
                            Name = "Mountain Biking"
                        });
                });

            modelBuilder.Entity("template_csharp_blog.Models.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PublishDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Matt Garstka",
                            Body = "Here is the body a blog that Matt would write!",
                            CategoryId = 1,
                            PublishDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Practicing your rudiments blog."
                        },
                        new
                        {
                            Id = 2,
                            Author = "Thomas Haawke",
                            Body = "Body of a blog that Thomas Haawke would write!",
                            CategoryId = 1,
                            PublishDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Mastering time space relationship in music blog."
                        },
                        new
                        {
                            Id = 3,
                            Author = "Alex Bent",
                            Body = "Alex would write a blog here about drumming with Trivium.",
                            CategoryId = 1,
                            PublishDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Blogging Trivium drumming journey."
                        },
                        new
                        {
                            Id = 4,
                            Author = "Aden Langdon",
                            Body = "A blog that i would write about video games.",
                            CategoryId = 2,
                            PublishDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Video game blog by Aden."
                        },
                        new
                        {
                            Id = 5,
                            Author = "Summit1g",
                            Body = "A blog but instead its just a tweet about video game developers.",
                            CategoryId = 2,
                            PublishDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Why did they do this?"
                        },
                        new
                        {
                            Id = 6,
                            Author = "Pestily",
                            Body = "Just another tweet about 'thursday'.",
                            CategoryId = 2,
                            PublishDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Its thursday."
                        },
                        new
                        {
                            Id = 8,
                            Author = "Seth",
                            Body = "Here is where the blog would be if I was Seth and wanted to write a blog",
                            CategoryId = 3,
                            PublishDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Building Berm Park blog."
                        },
                        new
                        {
                            Id = 9,
                            Author = "Aden Langdon",
                            Body = "This is where I would write my blog about mountain biking. But, since I am the developer I am going to develop the app first :).",
                            CategoryId = 3,
                            PublishDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "How to make more time, a blog."
                        },
                        new
                        {
                            Id = 10,
                            Author = "Phil",
                            Body = "Downhill mountain bike racing is an adrenaline filled action sport but there's a big risk",
                            CategoryId = 3,
                            PublishDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Conqering yourself and achieving your goals blog."
                        });
                });

            modelBuilder.Entity("template_csharp_blog.Models.Post", b =>
                {
                    b.HasOne("template_csharp_blog.Models.Category", "Category")
                        .WithMany("Posts")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("template_csharp_blog.Models.Category", b =>
                {
                    b.Navigation("Posts");
                });
#pragma warning restore 612, 618
        }
    }
}
